class Solution {
public:
    string longestPalindrome(string s) {
        string T = "&";
        for (char ch :s){
            T+= "#" + string(1,ch);
        }
        T+= "#%"; //T = &#b#a#b#a#d#% например
        vector<int> rad(T.length(),0);
        int center = 0, right = 0;

        for ( int i = 1; i < T.length() - 1; i++){
            int mirror = 2*center - i;

            if(i < right){
                rad[i] = min(right-i,rad[mirror]);
            }

            while (T[i+1+rad[i]] == T[i-1-rad[i]]){
                rad[i]++;
            }

            if(i+rad[i] > right){
                center = i; 
                right = i + rad[i]; 
            }
        }    

        int maxLen = 0, idx = 0;
        for (int i = 0; i < T.length() - 1; i++){
            if (rad[i] > maxLen){
                maxLen = rad[i];
                idx = i;
            }
        }

        int start = (idx - maxLen) / 2;

        return s.substr(start,maxLen);    
    }
};
